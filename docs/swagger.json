{
    "swagger": "2.0",
    "info": {
        "description": "Character and quest management application using the Go language and any suitable framework",
        "title": "RESTful API for a Dungeons \u0026 Dragons (D\u0026D)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/admin/class": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a new Class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a new Class",
                "parameters": [
                    {
                        "description": "Update class details. If a field does not need to be updated, just insert an empty string, You can get your class_id from get class api",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateClassBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new Class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new Class",
                "parameters": [
                    {
                        "description": "Create class details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClassBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/admin/class/{class_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a class by its ID",
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class ID",
                        "name": "class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/admin/diff-lv": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a new Difficulty Level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a new Difficulty Level",
                "parameters": [
                    {
                        "description": "Update Difficulty Levels. If a field does not need to be updated, just insert an empty string, You can get your difficulty_level_id from get difficulty_level api",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDifficultyLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new Difficulty Level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new Difficulty Level",
                "parameters": [
                    {
                        "description": "Create difficultyLevel details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DifficultyLevel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/admin/diff-lv/{difficulty_level_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a difficulty level by its ID",
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a difficulty level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "difficulty level ID",
                        "name": "difficulty_level_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/admin/race": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a new Race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a new Race",
                "parameters": [
                    {
                        "description": "Update race details. If a field does not need to be updated, just insert an empty string, You can get your race_id from get race api",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateRaceBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new Race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new Race",
                "parameters": [
                    {
                        "description": "Create race details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RaceBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/admin/race/{race_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a race by its ID",
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a race",
                "parameters": [
                    {
                        "type": "string",
                        "description": "race ID",
                        "name": "race_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/characters": {
            "get": {
                "description": "Get public characters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Get public characters",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/public/images": {
            "get": {
                "description": "Returns an image file from the server",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Get an image file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image filename",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/quests": {
            "get": {
                "description": "Get public quests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Get public quests",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/character": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows a registered user to create a new character with images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Create a new character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Character Description (Max: 5000 digits)",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Race ID",
                        "name": "race_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "class_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Character Privacy (true = private, false = public)",
                        "name": "privacy",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Character Images (Max: 10 files)",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/character/{character_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a character's details including name, description, difficulty level, privacy, and images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Update an existing character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "character_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Character Name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Character Description (max 5000 characters)",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Race ID",
                        "name": "race_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "class_id",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Character Privacy (true = private, false = public)",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Character Images (Max: 10 files)",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a character by its ID",
                "tags": [
                    "Character"
                ],
                "summary": "Delete a character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "character_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/characters": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all characters, You can retrieve the ID for updating or deleting a character if needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Get all characters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/classes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all classes, You can retrieve the ID for create character updating or deleting a class if needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all classes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/diff-lv": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get difficulty level, You can retrieve the ID for create quest updating or deleting a difficulty level if needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all difficulty level",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/quest": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows a registered user to create a new quest with images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quest"
                ],
                "summary": "Create a new quest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Quest Description (Max: 5000 digits)",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Difficulty Level ID",
                        "name": "diff_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Quest Privacy (true = private, false = public)",
                        "name": "privacy",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Quest Images (Max: 10 files)",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/quest/{quest_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a quest's details including name, description, difficulty level, privacy, and images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quest"
                ],
                "summary": "Update an existing quest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest ID",
                        "name": "quest_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Quest Name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Quest Description (max 5000 characters)",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Difficulty Level ID",
                        "name": "diff_id",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Quest Privacy (true = private, false = public)",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Quest Images (Max: 10 files)",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a quest by its ID",
                "tags": [
                    "Quest"
                ],
                "summary": "Delete a quest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest ID",
                        "name": "quest_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/quests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all quests, You can retrieve the ID for updating or deleting a quest if needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quest"
                ],
                "summary": "Get all quests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/races": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all races, You can retrieve the ID for create character updating or deleting a race if needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all races",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HandlerResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Create a new user account role (1: User, 2: Admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ClassBody": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 5000
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.DifficultyLevel": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 5000
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.HandlerResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "dto.RaceBody": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 5000
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateClassBody": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 5000
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDifficultyLevel": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 5000
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateRaceBody": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 5000
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.LoginBody": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.RegisterBody": {
            "type": "object",
            "required": [
                "name",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}